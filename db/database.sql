
DROP TABLE IF EXISTS Country CASCADE;
CREATE TABLE Country
(
	id SERIAL PRIMARY KEY,
	name VARCHAR(32) NOT NULL UNIQUE
);

DROP TABLE IF EXISTS Badge CASCADE;
CREATE TABLE Badge(
	id SERIAL PRIMARY KEY,
    color VARCHAR(16) NOT NULL,
    text VARCHAR(32) NOT NULL
);

DROP TYPE IF EXISTS UserType CASCADE;
CREATE TYPE UserType AS ENUM ('Registered', 'Moderator', 'Administrator');

/* USERS */
DROP TABLE IF EXISTS UserAcc CASCADE;
CREATE TABLE UserAcc
(
	id SERIAL PRIMARY KEY,
	username VARCHAR(16) UNIQUE NOT NULL,
	email VARCHAR(32) UNIQUE NOT NULL,
	password VARCHAR(32) NOT NULL,
    salt VARCHAR(32) NOT NULL,
	first_name VARCHAR(32) NOT NULL,
	last_name VARCHAR(32) NOT NULL,
    birth DATE NOT NULL,
	country INTEGER NOT NULL,
	description VARCHAR(256),
	image VARCHAR(32),
	score INTEGER DEFAULT 0,
	google BOOLEAN DEFAULT FALSE,
	user_type UserType NOT NULL DEFAULT 'Registered',
	CONSTRAINT Origin FOREIGN KEY (country)
		REFERENCES Country(id)
);

/* TOPIC */
DROP TABLE IF EXISTS Topic CASCADE;
CREATE TABLE Topic(
	id SERIAL PRIMARY KEY,
	admin_id INTEGER NOT NULL,
    topicname VARCHAR(32) UNIQUE NOT NULL,
	description VARCHAR(1024) NOT NULL,
	CONSTRAINT CreatedBy FOREIGN KEY (admin_id)
		REFERENCES UserAcc(id)
);

/* POSTS */
DROP TYPE IF EXISTS PostState CASCADE;
CREATE TYPE PostState AS ENUM ('Editing', 'Published', 'Deleted');

DROP TABLE IF EXISTS Post CASCADE;
CREATE TABLE Post
(
	id SERIAL PRIMARY KEY,
	current_state PostState NOT NULL,
	up_score INTEGER NOT NULL DEFAULT 0,
    down_score INTEGER NOT NULL DEFAULT 0
);


DROP TABLE IF EXISTS PostInstance CASCADE;
CREATE TABLE PostInstance(
	id SERIAL PRIMARY KEY,
	post_id INTEGER NOT NULL,
	user_id INTEGER NOT NULL,
	
    description VARCHAR(1024),
    creation DATE DEFAULT CURRENT_DATE,
	
	CONSTRAINT PostID FOREIGN KEY (post_id)
		REFERENCES Post(id),
	CONSTRAINT Created FOREIGN KEY (user_id)
		REFERENCES UserAcc(id)
	
);

DROP TABLE IF EXISTS Question CASCADE;
CREATE TABLE Question(
	post_id INTEGER PRIMARY KEY,
    topic_id INTEGER NOT NULL,
    title VARCHAR(64) NOT NULL,
	CONSTRAINT PostID FOREIGN KEY (post_id)
		REFERENCES Post(id),
	CONSTRAINT TopicID FOREIGN KEY (topic_id)
		REFERENCES Topic(id)
);

DROP TABLE IF EXISTS Tag CASCADE;
CREATE TABLE Tag
(
	id SERIAL PRIMARY KEY,
	text VARCHAR(32) NOT NULL
);

DROP TABLE IF EXISTS Answer CASCADE;
CREATE TABLE Answer(
	post_id INTEGER PRIMARY KEY,
    question_id INTEGER NOT NULL,
	accepted BOOLEAN DEFAULT FALSE,
	
	CONSTRAINT PostID FOREIGN KEY (post_id)
		REFERENCES Post(id),
	CONSTRAINT QuestionID FOREIGN KEY (question_id)
		REFERENCES Question(post_id)
);

DROP TABLE IF EXISTS AnswerComment CASCADE;
CREATE TABLE AnswerComment(
	post_id INTEGER PRIMARY KEY,
    answer_id INTEGER NOT NULL,
	
	CONSTRAINT PostID FOREIGN KEY (post_id)
		REFERENCES Post(id),
	CONSTRAINT AnswerID FOREIGN KEY (post_id)
		REFERENCES Answer(post_id)
);

DROP TABLE IF EXISTS Report CASCADE;
CREATE TABLE Report(
	id SERIAL PRIMARY KEY,
    post_id INTEGER NOT NULL,
	user_id INTEGER NOT NULL,
	title VARCHAR(32) NOT NULL,
	content VARCHAR(128) NOT NULL,
	reason VARCHAR(64) NOT NULL,
	created DATE DEFAULT CURRENT_DATE,
	
	CONSTRAINT PostID FOREIGN KEY (post_id)
		REFERENCES PostInstance(id),
	CONSTRAINT UserID FOREIGN KEY (user_id)
		REFERENCES UserAcc(id)
);

DROP TYPE IF EXISTS Action CASCADE;
CREATE TYPE Action AS ENUM ('Create', 'Delete', 'Update', 'Upvote', 'Downvote');

DROP TABLE IF EXISTS Activity CASCADE;
CREATE TABLE Activity(
	id SERIAL PRIMARY KEY,
    post_content_id INTEGER,
	post_id INTEGER NOT NULL,
	user_id INTEGER NOT NULL,
	action Action NOT NULL,
	
	CONSTRAINT PostID FOREIGN KEY (post_id)
		REFERENCES Post(id),
	CONSTRAINT PostInstanceID FOREIGN KEY (post_content_id)
		REFERENCES PostInstance(id),
	CONSTRAINT UserID FOREIGN KEY (user_id)
		REFERENCES UserAcc(id)
);

-- RelationTables

DROP TABLE IF EXISTS UserAccBadge CASCADE;
CREATE TABLE UserAccBadge
(
	user_id INTEGER NOT NULL,
    badge_id INTEGER NOT NULL,
	PRIMARY KEY (user_id, badge_id),
	
	CONSTRAINT UserID FOREIGN KEY (user_id)
		REFERENCES UserAcc(id),
	CONSTRAINT BadgeID FOREIGN KEY (badge_id)
		REFERENCES Badge(id)
);

DROP TABLE IF EXISTS TopicUserAcc CASCADE;
CREATE TABLE TopicUserAcc
(
	mod_id INTEGER NOT NULL,
    topic_id INTEGER NOT NULL,
	PRIMARY KEY(mod_id,topic_id), 
	
	CONSTRAINT ModeratorID FOREIGN KEY (mod_id)
		REFERENCES UserAcc(id),
	CONSTRAINT TopicID FOREIGN KEY (topic_id)
		REFERENCES Topic(id)
);

DROP TABLE IF EXISTS QuestionTag CASCADE;
CREATE TABLE QuestionTag
(
	question_id INTEGER NOT NULL,
    tag_id INTEGER NOT NULL,
	PRIMARY KEY(question_id,tag_id), 
	
	CONSTRAINT QuestionID FOREIGN KEY (question_id)
		REFERENCES Question(post_id),
	CONSTRAINT TagID FOREIGN KEY (tag_id)
		REFERENCES Tag(id)
);

